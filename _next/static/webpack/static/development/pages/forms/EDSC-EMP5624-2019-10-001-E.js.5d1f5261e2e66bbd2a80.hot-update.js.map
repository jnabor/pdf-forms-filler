{"version":3,"file":"static/webpack/static\\development\\pages\\forms\\EDSC-EMP5624-2019-10-001-E.js.5d1f5261e2e66bbd2a80.hot-update.js","sources":["webpack:///./pages/forms/EDSC-EMP5624-2019-10-001-E/index.tsx"],"sourcesContent":["import React, { useContext, useState } from 'react'\r\nimport Layout from '../../../app/AppLayout'\r\nimport { AppContext } from '../../../context/app-context'\r\nimport Router from 'next/router'\r\n\r\nimport GetAppIcon from '@material-ui/icons/GetApp'\r\nimport FormatIndentIncreaseIcon from '@material-ui/icons/FormatIndentIncrease'\r\nimport CircularProgress from '@material-ui/core/CircularProgress'\r\nimport {\r\n  Avatar,\r\n  Grid,\r\n  Link,\r\n  Container,\r\n  CssBaseline,\r\n  Paper,\r\n  Typography,\r\n  Button\r\n} from '@material-ui/core'\r\n\r\nimport {\r\n  useTheme,\r\n  createStyles,\r\n  makeStyles,\r\n  Theme\r\n} from '@material-ui/core/styles'\r\nimport { palette } from '@material-ui/system'\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    info: {\r\n      margin: theme.spacing(2),\r\n      display: 'flex',\r\n      flexDirection: 'column'\r\n    },\r\n    root: {\r\n      display: 'flex'\r\n    },\r\n    wrapper: {\r\n      margin: theme.spacing(1),\r\n      position: 'relative'\r\n    },\r\n    content: {\r\n      width: '100%', // Fix IE 11 issue.\r\n      marginTop: theme.spacing(1)\r\n    },\r\n    dlButton: {\r\n      color: theme.palette.grey[200]\r\n    },\r\n    buttonProgress: {\r\n      position: 'absolute',\r\n      top: '50%',\r\n      left: '50%',\r\n      marginTop: -12,\r\n      marginLeft: -12\r\n    }\r\n  })\r\n)\r\n\r\ninterface FormState {\r\n  loading: boolean\r\n  generated: boolean\r\n  dlLink: string\r\n}\r\n\r\nexport interface AuthProps {}\r\n\r\nconst Auth: React.SFC<AuthProps> = () => {\r\n  const classes = useStyles(useTheme())\r\n  const appContext = useContext(AppContext)\r\n\r\n  const [state, setState] = useState<FormState>({\r\n    loading: false,\r\n    generated: false,\r\n    dlLink: ''\r\n  })\r\n\r\n  let data = appContext.data[appContext.currentIndex]\r\n\r\n  const submitHandler = (e: any) => {\r\n    e.preventDefault()\r\n    console.log('submit', e)\r\n  }\r\n\r\n  const handleFillClick = () => {\r\n    if (!state.loading) {\r\n      setState({ ...state, loading: true, generated: false })\r\n      appContext.postFillForm(data, res => {\r\n        console.log(res)\r\n        const filename =\r\n          'https://ss-pdfformsfiller.s3-us-west-2.amazonaws.com/' +\r\n          JSON.parse(JSON.parse(res.response).body).filename\r\n        console.log('download', filename)\r\n        setState({\r\n          ...state,\r\n          loading: false,\r\n          generated: true,\r\n          dlLink: filename\r\n        })\r\n      })\r\n    }\r\n  }\r\n\r\n  return (\r\n    <Layout title='PDF Forms Filler'>\r\n      <div className={classes.info}>\r\n        <Typography variant='caption' gutterBottom>\r\n          For demo purposes, only the first page of the PDF form is filled out.\r\n          There is no validation handling when the form is filled in.\r\n        </Typography>\r\n        <Typography variant='caption' gutterBottom>\r\n          Creating, updating and saving of information is currently not\r\n          available as this is not yet connect to a database.\r\n        </Typography>\r\n        <Typography variant='caption' gutterBottom>\r\n          When you press the \"Fill In\" button. The file will be filled out and\r\n          generated in the server. The view \"Download\" button will be enabled\r\n          when the file is ready for viewing.\r\n        </Typography>\r\n      </div>\r\n      <div className={classes.root}>\r\n        <div className={classes.wrapper}>\r\n          <Button color='primary' variant='outlined' disabled>\r\n            Save\r\n          </Button>\r\n        </div>\r\n        <div className={classes.wrapper}>\r\n          <Button\r\n            className={classes.dlButton}\r\n            color='secondary'\r\n            variant='contained'\r\n            endIcon={<GetAppIcon />}\r\n            href={state.dlLink}\r\n            disabled={!state.generated}>\r\n            {' '}\r\n            Download\r\n          </Button>\r\n        </div>\r\n        <div className={classes.wrapper}>\r\n          <Button\r\n            variant='contained'\r\n            color='primary'\r\n            disabled={state.loading}\r\n            onClick={() => handleFillClick()}>\r\n            FILL TO FORM\r\n          </Button>\r\n          {state.loading && (\r\n            <CircularProgress size={22} className={classes.buttonProgress} />\r\n          )}\r\n        </div>\r\n      </div>\r\n    </Layout>\r\n  )\r\n}\r\n\r\nexport default Auth\r\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AAGA;AAEA;AACA;AAWA;AAQA;AAAA;AAEA;AACA;AACA;AACA;AAHA;AAKA;AACA;AADA;AAGA;AACA;AACA;AAFA;AAIA;AACA;AAAA;AACA;AAFA;AAIA;AACA;AADA;AAGA;AACA;AACA;AACA;AACA;AACA;AALA;AApBA;AADA;AACA;AAsCA;AACA;AACA;AACA;AAHA;AAKA;AACA;AACA;AAHA;AAJA;AAAA;AACA;AASA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAGA;AACA;AAEA;AACA;AACA;AAJA;AAMA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAMA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AANA;AAAA;AAAA;AAAA;AAAA;AAAA;AAWA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AAAA;AAAA;AAJA;AAAA;AAAA;AAAA;AAAA;AAAA;AAQA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAMA;AACA;AACA;;;;A","sourceRoot":""}